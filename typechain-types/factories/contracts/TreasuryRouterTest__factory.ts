/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TreasuryRouterTest,
  TreasuryRouterTestInterface,
} from "../../contracts/TreasuryRouterTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Refunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "refundable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161088d38038061088d83398101604081905261002f916100ce565b61003833610062565b6001600255600380546001600160a01b0319166001600160a01b03929092169190911790556100fe565b600180546001600160a01b031916905561007b8161007e565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e057600080fd5b81516001600160a01b03811681146100f757600080fd5b9392505050565b6107808061010d6000396000f3fe6080604052600436106100a65760003560e01c80638da5cb5b116100645780638da5cb5b14610177578063b5545a3c14610195578063d0e30db0146100b3578063e1736d29146101aa578063e30c3978146101ca578063f2fde38b146101e857600080fd5b80625c33e1146100ab57806361d027b3146100b557806368ec0d99146100f2578063715018a61461012d57806379ba5097146101425780637f51bb1f14610157575b600080fd5b6100b3610208565b005b3480156100c157600080fd5b506003546100d5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100fe57600080fd5b5061011f61010d3660046106fe565b60046020526000908152604090205481565b6040519081526020016100e9565b34801561013957600080fd5b506100b36102ce565b34801561014e57600080fd5b506100b36102e0565b34801561016357600080fd5b506100b36101723660046106fe565b61035a565b34801561018357600080fd5b506000546001600160a01b03166100d5565b3480156101a157600080fd5b506100b36103f4565b3480156101b657600080fd5b506100b36101c5366004610720565b610538565b3480156101d657600080fd5b506001546001600160a01b03166100d5565b3480156101f457600080fd5b506100b36102033660046106fe565b61055c565b6102106105cd565b600034116102535760405162461bcd60e51b815260206004820152600b60248201526a139bc8115512081cd95b9d60aa1b60448201526064015b60405180910390fd5b60405134815233907f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f9060200160405180910390a26003546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156102c1573d6000803e3d6000fd5b506102cc6001600255565b565b6102d6610624565b6102cc600061067e565b60015433906001600160a01b0316811461034e5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b606482015260840161024a565b6103578161067e565b50565b610362610624565b6001600160a01b0381166103aa5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161024a565b600380546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190600090a250565b6103fc6105cd565b336000908152600460205260409020548061044f5760405162461bcd60e51b81526020600482015260136024820152724e6f20726566756e6420617661696c61626c6560681b604482015260640161024a565b3360008181526004602052604080822091909155517fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651906104939084815260200190565b60405180910390a2604051600090339083908381818185875af1925050503d80600081146104dd576040519150601f19603f3d011682016040523d82523d6000602084013e6104e2565b606091505b505090508061052c5760405162461bcd60e51b81526020600482015260166024820152751499599d5b99081d1c985b9cd9995c8819985a5b195960521b604482015260640161024a565b50506102cc6001600255565b610540610624565b6001600160a01b03909116600090815260046020526040902055565b610564610624565b600180546001600160a01b0383166001600160a01b031990911681179091556105956000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600280540361061e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161024a565b60028055565b6000546001600160a01b031633146102cc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161024a565b600180546001600160a01b031916905561035781600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146106f957600080fd5b919050565b60006020828403121561071057600080fd5b610719826106e2565b9392505050565b6000806040838503121561073357600080fd5b61073c836106e2565b94602093909301359350505056fea26469706673582212202ac3de1fcdb868d2ee08787a3d9f3de54f6d8657efb89a46051fae008364cfbc64736f6c63430008140033";

type TreasuryRouterTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryRouterTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasuryRouterTest__factory extends ContractFactory {
  constructor(...args: TreasuryRouterTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_treasury, overrides || {});
  }
  override deploy(
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_treasury, overrides || {}) as Promise<
      TreasuryRouterTest & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TreasuryRouterTest__factory {
    return super.connect(runner) as TreasuryRouterTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryRouterTestInterface {
    return new Interface(_abi) as TreasuryRouterTestInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TreasuryRouterTest {
    return new Contract(address, _abi, runner) as unknown as TreasuryRouterTest;
  }
}
