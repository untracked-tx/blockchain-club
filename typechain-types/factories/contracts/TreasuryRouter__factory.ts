/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TreasuryRouter,
  TreasuryRouterInterface,
} from "../../contracts/TreasuryRouter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Refunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "refundable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newTreasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161134e610118600039600081816103dc0152818161041c015281816104a4015281816104e40152610560015261134e6000f3fe6080604052600436106100cb5760003560e01c806379ba50971161007a57806379ba5097146102255780637f51bb1f1461023a5780638da5cb5b1461025a578063b5545a3c14610278578063c4d66de81461028d578063e1736d29146102ad578063e30c3978146102cd578063f2fde38b146102eb57600080fd5b80625c33e1146101465780633659cfe61461014e5780634f1ef2861461016e57806352d1902d1461018157806361d027b3146101a957806368ec0d99146101e2578063715018a61461021057600080fd5b366101415760405134815233907f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f9060200160405180910390a261012d546040516001600160a01b03909116903480156108fc02916000818181858888f1935050505015801561013f573d6000803e3d6000fd5b005b600080fd5b61013f61030b565b34801561015a57600080fd5b5061013f610169366004611045565b6103d2565b61013f61017c366004611076565b61049a565b34801561018d57600080fd5b50610196610553565b6040519081526020015b60405180910390f35b3480156101b557600080fd5b5061012d546101ca906001600160a01b031681565b6040516001600160a01b0390911681526020016101a0565b3480156101ee57600080fd5b506101966101fd366004611045565b61012e6020526000908152604090205481565b34801561021c57600080fd5b5061013f610601565b34801561023157600080fd5b5061013f610613565b34801561024657600080fd5b5061013f610255366004611045565b61068a565b34801561026657600080fd5b506033546001600160a01b03166101ca565b34801561028457600080fd5b5061013f610725565b34801561029957600080fd5b5061013f6102a8366004611045565b61086b565b3480156102b957600080fd5b5061013f6102c8366004611138565b6109a8565b3480156102d957600080fd5b506065546001600160a01b03166101ca565b3480156102f757600080fd5b5061013f610306366004611045565b6109cd565b610313610a3e565b600034116103565760405162461bcd60e51b815260206004820152600b60248201526a139bc8115512081cd95b9d60aa1b60448201526064015b60405180910390fd5b60405134815233907f8e47b87b0ef542cdfa1659c551d88bad38aa7f452d2bbb349ab7530dfec8be8f9060200160405180910390a261012d546040516001600160a01b03909116903480156108fc02916000818181858888f193505050501580156103c5573d6000803e3d6000fd5b506103d0600160fb55565b565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361041a5760405162461bcd60e51b815260040161034d90611162565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661044c610a9e565b6001600160a01b0316146104725760405162461bcd60e51b815260040161034d906111ae565b61047b81610aba565b6040805160008082526020820190925261049791839190610ac2565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104e25760405162461bcd60e51b815260040161034d90611162565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610514610a9e565b6001600160a01b03161461053a5760405162461bcd60e51b815260040161034d906111ae565b61054382610aba565b61054f82826001610ac2565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ee5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b606482015260840161034d565b506000805160206112d283398151915290565b610609610c32565b6103d06000610c8c565b60655433906001600160a01b031681146106815760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b606482015260840161034d565b61049781610c8c565b610692610c32565b6001600160a01b0381166106da5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161034d565b61012d80546001600160a01b0319166001600160a01b0383169081179091556040517f7dae230f18360d76a040c81f050aa14eb9d6dc7901b20fc5d855e2a20fe814d190600090a250565b61072d610a3e565b33600090815261012e6020526040902054806107815760405162461bcd60e51b81526020600482015260136024820152724e6f20726566756e6420617661696c61626c6560681b604482015260640161034d565b33600081815261012e602052604080822091909155517fd7dee2702d63ad89917b6a4da9981c90c4d24f8c2bdfd64c604ecae57d8d0651906107c69084815260200190565b60405180910390a2604051600090339083908381818185875af1925050503d8060008114610810576040519150601f19603f3d011682016040523d82523d6000602084013e610815565b606091505b505090508061085f5760405162461bcd60e51b81526020600482015260166024820152751499599d5b99081d1c985b9cd9995c8819985a5b195960521b604482015260640161034d565b50506103d0600160fb55565b600054610100900460ff161580801561088b5750600054600160ff909116105b806108a55750303b1580156108a5575060005460ff166001145b6109085760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161034d565b6000805460ff19166001179055801561092b576000805461ff0019166101001790555b610933610ca5565b61093b610cd4565b610943610cfb565b61012d80546001600160a01b0319166001600160a01b038416179055801561054f576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6109b0610c32565b6001600160a01b03909116600090815261012e6020526040902055565b6109d5610c32565b606580546001600160a01b0383166001600160a01b03199091168117909155610a066033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600260fb5403610a905760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161034d565b600260fb55565b600160fb55565b6000805160206112d2833981519152546001600160a01b031690565b610497610c32565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610afa57610af583610d2a565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610b54575060408051601f3d908101601f19168201909252610b51918101906111fa565b60015b610bb75760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161034d565b6000805160206112d28339815191528114610c265760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161034d565b50610af5838383610dc6565b6033546001600160a01b031633146103d05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034d565b606580546001600160a01b031916905561049781610df1565b600054610100900460ff16610ccc5760405162461bcd60e51b815260040161034d90611213565b6103d0610e43565b600054610100900460ff166103d05760405162461bcd60e51b815260040161034d90611213565b600054610100900460ff16610d225760405162461bcd60e51b815260040161034d90611213565b6103d0610e73565b6001600160a01b0381163b610d975760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161034d565b6000805160206112d283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610dcf83610e9a565b600082511180610ddc5750805b15610af557610deb8383610eda565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e6a5760405162461bcd60e51b815260040161034d90611213565b6103d033610c8c565b600054610100900460ff16610a975760405162461bcd60e51b815260040161034d90611213565b610ea381610d2a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610eff83836040518060600160405280602781526020016112f260279139610f06565b9392505050565b6060600080856001600160a01b031685604051610f239190611282565b600060405180830381855af49150503d8060008114610f5e576040519150601f19603f3d011682016040523d82523d6000602084013e610f63565b606091505b5091509150610f7486838387610f7e565b9695505050505050565b60608315610fed578251600003610fe6576001600160a01b0385163b610fe65760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161034d565b5081610ff7565b610ff78383610fff565b949350505050565b81511561100f5781518083602001fd5b8060405162461bcd60e51b815260040161034d919061129e565b80356001600160a01b038116811461104057600080fd5b919050565b60006020828403121561105757600080fd5b610eff82611029565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561108957600080fd5b61109283611029565b9150602083013567ffffffffffffffff808211156110af57600080fd5b818501915085601f8301126110c357600080fd5b8135818111156110d5576110d5611060565b604051601f8201601f19908116603f011681019083821181831017156110fd576110fd611060565b8160405282815288602084870101111561111657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806040838503121561114b57600080fd5b61115483611029565b946020939093013593505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561120c57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015611279578181015183820152602001611261565b50506000910152565b6000825161129481846020870161125e565b9190910192915050565b60208152600082518060208401526112bd81604085016020870161125e565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212209ecd7a68b47b3653f4673b5b967df1bdae8707cc7039603a5030f684d2142e9964736f6c63430008140033";

type TreasuryRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasuryRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasuryRouter__factory extends ContractFactory {
  constructor(...args: TreasuryRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TreasuryRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TreasuryRouter__factory {
    return super.connect(runner) as TreasuryRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasuryRouterInterface {
    return new Interface(_abi) as TreasuryRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TreasuryRouter {
    return new Contract(address, _abi, runner) as unknown as TreasuryRouter;
  }
}
