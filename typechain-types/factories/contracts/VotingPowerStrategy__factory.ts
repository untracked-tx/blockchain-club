/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  VotingPowerStrategy,
  VotingPowerStrategyInterface,
} from "../../contracts/VotingPowerStrategy";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRoles",
        type: "address",
      },
    ],
    name: "RolesContractSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getVotingPower",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_roles",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rolesContract",
    outputs: [
      {
        internalType: "contract IRoles",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_roles",
        type: "address",
      },
    ],
    name: "setRolesContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e1565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116146100df576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051610fae6101186000396000818161022d01528181610276015281816102fe0152818161033e01526103ba0152610fae6000f3fe6080604052600436106100a75760003560e01c8063afa202ac11610064578063afa202ac14610165578063bb4d443614610185578063c4d66de8146101a5578063ca53b391146101c5578063e30c3978146101e5578063f2fde38b1461020357600080fd5b80633659cfe6146100ac5780634f1ef286146100ce57806352d1902d146100e1578063715018a61461010957806379ba50971461011e5780638da5cb5b14610133575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610ccf565b610223565b005b6100cc6100dc366004610d00565b6102f4565b3480156100ed57600080fd5b506100f66103ad565b6040519081526020015b60405180910390f35b34801561011557600080fd5b506100cc61045b565b34801561012a57600080fd5b506100cc61046f565b34801561013f57600080fd5b506033546001600160a01b03165b6040516001600160a01b039091168152602001610100565b34801561017157600080fd5b506100cc610180366004610ccf565b6104e6565b34801561019157600080fd5b506100f66101a0366004610ccf565b610538565b3480156101b157600080fd5b506100cc6101c0366004610ccf565b6105ad565b3480156101d157600080fd5b5060fb5461014d906001600160a01b031681565b3480156101f157600080fd5b506065546001600160a01b031661014d565b34801561020f57600080fd5b506100cc61021e366004610ccf565b61070d565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102745760405162461bcd60e51b815260040161026b90610dc2565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102a661077e565b6001600160a01b0316146102cc5760405162461bcd60e51b815260040161026b90610e0e565b6102d58161079a565b604080516000808252602082019092526102f1918391906107a2565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361033c5760405162461bcd60e51b815260040161026b90610dc2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661036e61077e565b6001600160a01b0316146103945760405162461bcd60e51b815260040161026b90610e0e565b61039d8261079a565b6103a9828260016107a2565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104485760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b606482015260840161026b565b50600080516020610f3283398151915290565b610463610912565b61046d600061096c565b565b60655433906001600160a01b031681146104dd5760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b606482015260840161026b565b6102f18161096c565b6104ee610912565b60fb80546001600160a01b0319166001600160a01b0383169081179091556040517fa7659590fcf12e58bff33470df7c3dc8827fd8f5df4ad50bd9550a4c9ab4c54e90600090a250565b60fb54604051635da6a21b60e11b81526001600160a01b038381166004830152600092169063bb4d443690602401602060405180830381865afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a79190610e5a565b92915050565b600054610100900460ff16158080156105cd5750600054600160ff909116105b806105e75750303b1580156105e7575060005460ff166001145b61064a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161026b565b6000805460ff19166001179055801561066d576000805461ff0019166101001790555b610675610985565b61067d6109b4565b60fb80546001600160a01b0319166001600160a01b0384169081179091556040517fa7659590fcf12e58bff33470df7c3dc8827fd8f5df4ad50bd9550a4c9ab4c54e90600090a280156103a9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b610715610912565b606580546001600160a01b0383166001600160a01b031990911681179091556107466033546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080516020610f32833981519152546001600160a01b031690565b6102f1610912565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156107da576107d5836109db565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610834575060408051601f3d908101601f1916820190925261083191810190610e5a565b60015b6108975760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161026b565b600080516020610f3283398151915281146109065760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161026b565b506107d5838383610a77565b6033546001600160a01b0316331461046d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161026b565b606580546001600160a01b03191690556102f181610aa2565b600054610100900460ff166109ac5760405162461bcd60e51b815260040161026b90610e73565b61046d610af4565b600054610100900460ff1661046d5760405162461bcd60e51b815260040161026b90610e73565b6001600160a01b0381163b610a485760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161026b565b600080516020610f3283398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610a8083610b24565b600082511180610a8d5750805b156107d557610a9c8383610b64565b50505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b1b5760405162461bcd60e51b815260040161026b90610e73565b61046d3361096c565b610b2d816109db565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610b898383604051806060016040528060278152602001610f5260279139610b90565b9392505050565b6060600080856001600160a01b031685604051610bad9190610ee2565b600060405180830381855af49150503d8060008114610be8576040519150601f19603f3d011682016040523d82523d6000602084013e610bed565b606091505b5091509150610bfe86838387610c08565b9695505050505050565b60608315610c77578251600003610c70576001600160a01b0385163b610c705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161026b565b5081610c81565b610c818383610c89565b949350505050565b815115610c995781518083602001fd5b8060405162461bcd60e51b815260040161026b9190610efe565b80356001600160a01b0381168114610cca57600080fd5b919050565b600060208284031215610ce157600080fd5b610b8982610cb3565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610d1357600080fd5b610d1c83610cb3565b9150602083013567ffffffffffffffff80821115610d3957600080fd5b818501915085601f830112610d4d57600080fd5b813581811115610d5f57610d5f610cea565b604051601f8201601f19908116603f01168101908382118183101715610d8757610d87610cea565b81604052828152886020848701011115610da057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215610e6c57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015610ed9578181015183820152602001610ec1565b50506000910152565b60008251610ef4818460208701610ebe565b9190910192915050565b6020815260008251806020840152610f1d816040850160208701610ebe565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122013fbca39a0c70afcdc3814c4ea8fa9faea68a2b2bb59ac441856d738fe78e43164736f6c63430008140033";

type VotingPowerStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingPowerStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingPowerStrategy__factory extends ContractFactory {
  constructor(...args: VotingPowerStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VotingPowerStrategy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): VotingPowerStrategy__factory {
    return super.connect(runner) as VotingPowerStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingPowerStrategyInterface {
    return new Interface(_abi) as VotingPowerStrategyInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VotingPowerStrategy {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as VotingPowerStrategy;
  }
}
